{"version":3,"sources":["components/Pagination/Pagination.tsx","App.tsx","utils.ts","index.tsx"],"names":["Pagination","total","perPage","currentPage","onPageChange","pageNumbers","useMemo","numbers","i","Math","ceil","push","className","classNames","disabled","type","onClick","page","map","pageNumber","active","handleNumberClick","length","items","from","to","n","getNumbers","App","useState","setPerPage","setCurrentPage","lastItem","firstItem","itemsToShow","slice","id","value","onChange","event","target","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"oNAUaA,EAAwC,SAAC,GAK/C,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAcC,mBAAQ,WAG1B,IAFA,IAAMC,EAAU,GAEPC,EAAI,EAAGA,GAAKC,KAAKC,KAAKT,EAAQC,GAAUM,GAAK,EACpDD,EAAQI,KAAKH,GAGf,OAAOD,IACN,CAACN,EAAOC,IAsBX,OACE,qBAAIU,UAAU,aAAd,UACE,oBACEA,UAAWC,IACT,YACA,CACEC,SAA0B,IAAhBX,IAJhB,SAQE,wBACEY,KAAK,SACL,UAAQ,WACRH,UAAU,YACV,gBAA+B,IAAhBT,EACfa,QAnCgB,WACtB,IAAMC,EAAOd,EAAc,EAEvBc,EAAO,GACTb,EAAaa,IA0BX,oBAWDZ,EAAYa,KAAI,SAAAC,GAAU,OACzB,oBACEP,UAAWC,IACT,YACA,CACEO,OAAQjB,IAAgBgB,IAJ9B,SASE,wBACEJ,KAAK,SACL,UAAQ,WACRH,UAAU,YACVI,QAAS,kBAvCO,SAACG,GACzBf,EAAae,GAsCUE,CAAkBF,IAJnC,SAMGA,KAREA,MAYT,oBAAIP,UAAWC,IACb,YACA,CACEC,SAAUX,IAAgBE,EAAYiB,SAH1C,SAOE,wBACEP,KAAK,SACL,UAAQ,WACRH,UAAU,YACV,gBAAeT,IAAgBE,EAAYiB,OAC3CN,QAjEgB,WACtB,IAAMC,EAAOd,EAAc,EAEvBc,GAAQA,GAAQZ,EAAYiB,QAC9BlB,EAAaa,IAwDX,wBCxFFM,ECNC,SAAoBC,EAAcC,GAGvC,IAFA,IAAMlB,EAAU,GAEPmB,EAAIF,EAAME,GAAKD,EAAIC,GAAK,EAC/BnB,EAAQI,KAAKe,GAGf,OAAOnB,EDDKoB,CAAW,EAAG,IACzBT,KAAI,SAAAQ,GAAC,qBAAYA,MAEPE,EAAgB,WAC3B,IACA,EAA8BC,mBAAS,GAAvC,mBAAO3B,EAAP,KAAgB4B,EAAhB,KACA,EAAsCD,mBAAS,GAA/C,mBAAO1B,EAAP,KAAoB4B,EAApB,KAWMC,EAAW7B,EAAcD,EAbjB,MAeVC,EAAcD,EAEZ+B,EAAa9B,EAAcD,EAAWA,EAAU,EAEhDgC,EAAc5B,mBAAQ,kBAC1BiB,EAAMY,MAAMF,EAAY,EAAGD,KAC1B,CAACC,EAAWD,IAEf,OACE,sBAAKpB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWT,EADX,mBACiC8B,EADjC,cACgDD,EADhD,eA3BU,GA2BV,OAIA,sBAAKpB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRwB,GAAG,kBACHxB,UAAU,eACVyB,MAAOnC,EACPoC,SA9BW,SAACC,GACpBT,GAAYS,EAAMC,OAAOH,OACzBN,EAAe,IAuBT,UAOE,wBAAQM,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOI,QAAQ,kBAAkB7B,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEX,MApDQ,GAqDRC,QAASA,EACTC,YAAaA,EACbC,aAnDe,SAACa,GAAD,OACnBc,EAAed,MAoDb,6BACGiB,EAAYhB,KAAI,SAAAwB,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YElElCC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.2e4d1768.chunk.js","sourcesContent":["import React, { useMemo } from 'react';\nimport classNames from 'classnames';\n\ntype PaginationProps = {\n  total: number;\n  perPage: number;\n  currentPage: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<PaginationProps> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const pageNumbers = useMemo(() => {\n    const numbers = [];\n\n    for (let i = 1; i <= Math.ceil(total / perPage); i += 1) {\n      numbers.push(i);\n    }\n\n    return numbers;\n  }, [total, perPage]);\n\n  const handlePrevClick = () => {\n    const page = currentPage - 1;\n\n    if (page > 0) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNextClick = () => {\n    const page = currentPage + 1;\n\n    if (page && page <= pageNumbers.length) {\n      onPageChange(page);\n    }\n  };\n\n  const handleNumberClick = (pageNumber: number) => {\n    onPageChange(pageNumber);\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames(\n          'page-item',\n          {\n            disabled: currentPage === 1,\n          },\n        )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === 1}\n          onClick={handlePrevClick}\n        >\n          «\n        </button>\n      </li>\n\n      {pageNumbers.map(pageNumber => (\n        <li\n          className={classNames(\n            'page-item',\n            {\n              active: currentPage === pageNumber,\n            },\n          )}\n          key={pageNumber}\n        >\n          <button\n            type=\"button\"\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => handleNumberClick(pageNumber)}\n          >\n            {pageNumber}\n          </button>\n        </li>\n      ))}\n      <li className={classNames(\n        'page-item',\n        {\n          disabled: currentPage === pageNumbers.length,\n        },\n      )}\n      >\n        <button\n          type=\"button\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={currentPage === pageNumbers.length}\n          onClick={handleNextClick}\n        >\n          »\n        </button>\n      </li>\n    </ul>\n  );\n};\n","import React, { useState, useMemo } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nexport const App: React.FC = () => {\n  const total = 42;\n  const [perPage, setPerPage] = useState(5);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onPageChange = (page: number) => (\n    setCurrentPage(page)\n  );\n\n  const handleChange = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(1);\n  };\n\n  const lastItem = currentPage * perPage > total\n    ? total\n    : currentPage * perPage;\n\n  const firstItem = (currentPage * perPage) - perPage + 1;\n\n  const itemsToShow = useMemo(() => (\n    items.slice(firstItem - 1, lastItem)\n  ), [firstItem, lastItem]);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${firstItem} - ${lastItem} of ${total})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={perPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={total}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={onPageChange}\n      />\n      <ul>\n        {itemsToShow.map(item => (\n          <li data-cy=\"item\" key={item}>{item}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}